name: build-parallel

on:
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.event.repository.name }}/portmaster

#concurrency: 
#  group: main

jobs:
  get-builds:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - id: set-matrix
        run: |
            ls -lah
            echo -ne '::set-output name=matrix::{"package":['
            echo -ne $(find ./ports -name package.info | sed -E 's|./ports/(.*)/package.info|"\1"|' | sort | tr '\n' ',')
            echo ']}'

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - id: build-base-image
        run: |
         ./init-docker
          docker buildx use portmaster-remote-builder
         ./ports/build-base-images --push --platform linux/arm/v7,linux/arm64/v8,linux/amd64   
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  buildx:
    needs: get-builds
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix: ${{fromJson(needs.get-builds.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get date for artifacts
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d_%H%M')"
  
      - name: Build ${{ matrix.package }}
        id: build
        run: |
           set -e
           ./init-docker
           docker buildx use portmaster-remote-builder
           ./ports/build ${{ matrix.package }} --push --docker-image
           
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      #- name: "Publish pre-release: ${{github.event.inputs.release_tag}}"
      #  uses: softprops/action-gh-release@v1
      #  with:
      #    prerelease: true
      #    tag_name:  "${{steps.date.outputs.date}}"
      #    name: "${{steps.date.outputs.date}}"
      #    files: |
      #      release/*.zip
      #      ports.md
      #    token: ${{ secrets.GITHUB_TOKEN }}
