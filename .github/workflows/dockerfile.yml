name: port-builder-dockerfile

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.event.repository.full_name }}/build

jobs:

  buildx:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
  
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: lowercase IMAGE_NAME
        run: |
          echo "IMAGE_NAME_LOWER=${IMAGE_NAME,,}" >> ${GITHUB_ENV}
          echo "BRANCH_NAME=${GITHUB_REF##*/}" >> ${GITHUB_ENV}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY}}/${{ env.IMAGE_NAME_LOWER }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          # Platforms needed:
          # - arm64/v8 - 64-bit compiling for arm (qemu)
          # - arm/v7 - 32-bit compiling for arm (qemu).
          # - amd64 - For crosscompiling to arm64/arm (native - "faster")
          platforms: linux/arm64/v8,linux/arm/v7,linux/amd64
          context: .
          push: true
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/cache:${{ env.BRANCH_NAME }}
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/cache:${{ env.BRANCH_NAME }},mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
