#! /bin/bash

set -e
DIR="$(realpath $( dirname "${BASH_SOURCE[0]}" ))"

function parse_args() {
  BUILD_PLATFORM="linux/arm64/v8"
  USE_DOCKER_PUSH=false
  
  # Parse args
  ARGS=()
  while [[ $# -gt 0 ]]; do
    key="$1"
  
    case $key in
      --platform)
        BUILD_PLATFORM="$2"
        shift # past argument
        shift # past value
        ;;
      -p|--push)
        USE_DOCKER_PUSH="true"
        shift # past argument
        ;;
      -h|--help)
        echo "$0  [arguments]"
        echo "  --platform - builds for specific platform.  Cannot contain multiple comma separated platforms unles --push is specified"
        echo "  --push (-p) - pushes docker images.  Meant for build server"
        exit 1
        ;;
      *)    # unknown option
        ARGS+=("$1") # save it in an array for later
        shift # past argument
        ;;
    esac
  done
}
parse_args "$@"
echo "USE_DOCKER_PUSH: ${USE_DOCKER_PUSH} BUILD_PLATFORM: ${BUILD_PLATFORM}"

BRANCH=main

IMAGE_BASE=ghcr.io/pkegg/portmaster
IMAGE=${IMAGE_BASE}:${BRANCH}
IMAGE_CACHE=${IMAGE_BASE}/cache:${BRANCH}

IMAGE_BUILD=${IMAGE_BASE}/build:${BRANCH}
IMAGE_BUILD_CACHE=${IMAGE_BASE}/build/cache:${BRANCH}
IMAGE_TEST=${IMAGE_BASE}/test:${BRANCH}

IMAGE_TEST_CACHE=${IMAGE_BASE}/test/cache:${BRANCH}

if [[ "${USE_DOCKER_PUSH}" == "true" ]]; then
  IMAGE_CACHE_TO="--pull --cache-to=type=registry,ref=${IMAGE_CACHE},mode=max --push"
  IMAGE_BUILD_CACHE_TO="--pull --cache-to=type=registry,ref=${IMAGE_BUILD_CACHE},mode=max --push"
  IMAGE_TEST_CACHE_TO="--pull --cache-to=type=registry,ref=${IMAGE_TEST_CACHE},mode=max --push"
else
  #TODO: Think about builder initialization
  IMAGE_CACHE_TO="--load --builder default"
  IMAGE_BUILD_CACHE_TO="${IMAGE_CACHE_TO}"
  IMAGE_TEST_CACHE_TO="${IMAGE_CACHE_TO}"
fi

echo "IMAGE: ${IMAGE} IMAGE_CACHE: ${IMAGE_CACHE}"
echo "IMAGE_CACHE_TO: ${IMAGE_CACHE_TO}"
docker buildx build --tag ${IMAGE} \
  --cache-from=type=registry,ref=${IMAGE_CACHE} \
  ${IMAGE_CACHE_TO} \
  --platform ${BUILD_PLATFORM} .

echo "built: ${IMAGE}"

echo "pulling submodules"

if [[ ! -d "ports/_global/test/libs/bats-assert/src" ]]; then
  echo "Updating testing git submodules"
  git submodule update --init
else
  echo "Appears test submodules already initialized"
fi
docker buildx build --tag ${IMAGE_BUILD} \
  -f Dockerfile.build \
  --cache-from=type=registry,ref=${IMAGE_BUILD_CACHE} \
  ${IMAGE_BUILD_CACHE_TO} \
  --platform ${BUILD_PLATFORM} .

echo "built: ${IMAGE_BUILD}"

echo "running tests: ${IMAGE_TEST}"
# Run tests sepatately on amd64 so they run faster
#  NOTE: if amd64 is not the host platform in the future - we should change
docker buildx build --tag ${IMAGE_TEST} \
  -f Dockerfile.build \
  --cache-from=type=registry,ref=${IMAGE_TEST_CACHE} \
  --target test \
  ${IMAGE_TEST_CACHE_TO} \
  --platform ${BUILD_PLATFORM} .
