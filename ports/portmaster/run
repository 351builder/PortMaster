#!/bin/bash
#
# PortMaster
# https://github.com/christianhaitian/arkOS/wiki/PortMaster
# Description : A simple tool that allows you to download
# various game ports that are available for RK3326 DEVICEs
# using 351Elec and Ubuntu based distrOS such as ArkOS, TheRA, and RetroOZ.
#
#set -e
set -u
DIR="$(realpath $( dirname "${BASH_SOURCE[0]}" ))"
TITLE="PortMaster"

# shellcheck source=/dev/null
if [ -f "${DIR}/global-functions" ]; then
  source "${DIR}/global-functions"
elif [ -f "${DIR}/../global/global-functions" ]; then
  # This just allows testing directly from the ports/portmaster directory in git
  source "${DIR}/../global/global-functions"
fi

OS=$(get_os)
ROMS_DIR=$(get_roms_dir)
TOOLS_DIR=$(get_tools_dir)
HOTKEY=$(get_hotkey)
CONSOLE=$(get_console)
GITHUB_ORG=pkegg

WEBSITE="https://github.com/${GITHUB_ORG}/PortMaster/releases/latest/download/"
WEBSITE_IN_CHINA=


ESUDO="$(get_sudo)"

if [ "${OS}" == "351ELEC" ]; then
  export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/storage/roms/ports/PortMaster/libs"
fi
echo_err "OS: ${OS} ROMS_DIR: ${ROMS_DIR} TOOLS_DIR: ${TOOLS_DIR} CONSOLE: ${CONSOLE} HOTKEY: ${HOTKEY} SUDO: ${ESUDO}" 

initialize_permissions

if [ ! -d "/dev/shm/portmaster" ]; then
  $ESUDO mkdir /dev/shm/portmaster
fi

curversion="$(curl "file://$(realpath "${DIR}")/version")"
echo_err "version: ${curversion}"

dialog_initialize "PortMaster v$curversion"

console_clear

launch_with_oga_controls "Portmaster.sh"

if ! is_network_connected; then
  dialog_msg "$TITLE" "\n\nYour network connection doesn't seem to be working. \
              \nDid you make sure to configure your wifi connection?"

  exit 0
fi

if [[ "$(in_china)" == "true" ]]; then
  WEBSITE="${WEBSITE_IN_CHINA}"
fi

dialog_clear


function UpdateCheck() {

  local version_url="${WEBSITE}version"
  local portmaster_download_zip=/dev/shm/portmaster/PortMaster.zip
  local gitversion
  gitversion=$(curl -s --connect-timeout 30 -m 60 "${version_url}")


  if [[ "$gitversion" != "$curversion" ]]; then

    if dialog_download "${WEBSITE}PortMaster.zip" "${portmaster_download_zip}" "Downloading and installing PortMaster update..."; then
      $ESUDO unzip -X -o ${portmaster_download_zip} -d "${TOOLS_DIR}/"
      if [[ "TheRA" == "${OS}" ]]; then
   		  $ESUDO chmod -R 777 "$TOOLS_DIR/PortMaster"
   	  fi
      dialog_msg "$TITLE" "PortMaster updated successfully."
   	  $ESUDO rm -f ${portmaster_download_zip} 
   	  exit 0
    else
      dialog_msg "$TITLE" "PortMaster failed to update." 
   	  $ESUDO rm -f ${portmaster_download_zip}
      exit 1
   	fi
  else
    dialog_msg "$TITLE" "No update needed."
  fi
}

PortInfoInstall() {
  local choice="$1"

  local portmaster_tmp=/dev/shm/portmaster
  local ports_file=/dev/shm/portmaster/ports.md
  
  local msgtxt
  msgtxt=$(cat "$ports_file" | grep "$choice" | grep -oP '(?<=Desc=").*?(?=")')
  local installloc
  installloc=$(cat "$ports_file" | grep "$choice" | grep -oP '(?<=locat=").*?(?=")' | sed 's|%20|.|')
  local porter
  porter=$(cat "$ports_file" | grep "$choice" | grep -oP '(?<=porter=").*?(?=")')
  local port_url="${WEBSITE}${installloc}"

  if dialog_yes_no "$choice" "$msgtxt \n\nPorted By: $porter\n\nWould you like to continue to install this port?"; then
    if dialog_download "${port_url}" "$portmaster_tmp/$installloc" "Downloading ${1} package..."; then
      if $ESUDO unzip -o $portmaster_tmp/$installloc -d ${ROMS_DIR}/ports/; then
  		  if [[ "$OS" == "TheRA" ]]; then
  		    $ESUDO chmod -R 777 ${ROMS_DIR}/ports
  		  fi
  			if [[ "${OS}" == "351ELEC" ]]; then
  			  sed -i 's/sudo //g' ${ROMS_DIR}/ports/*.sh
  			fi
        dialog_msg "$choice" "$choice installed successfully. \
  		    \n\nMake sure to restart EmulationStation in order to see it in the ports menu."
  		else
        dialog_msg "$choice" "$choice did NOT install. \
  		    \n\nYour roms partition seems to be full."
  		fi
    else
      dialog_msg "$choice" "$choice failed to install successfully."
    fi
  else
    dialog_msg "$choice" "$choice failed to download successfully.  The PortMaster server maybe busy or check your internet connection."
  fi
  $ESUDO rm -f "$portmaster_tmp/$installloc"

}

Cleanup() {
  set +e

  echo_err "removing ports.md"
  $ESUDO rm -f /dev/shm/portmaster/ports.md

  echo_err "done"
  dialog_clear
}

MainMenu() {

  local options=(
   $($ESUDO cat /dev/shm/portmaster/ports.md | grep -oP '(?<=Title=").*?(?=")')
  )
                                                                                                         
  while true; do
    selection=$(dialog_menu "[ Main Menu ]" "Available ports for install" "$HOTKEY + Start to Exit" ${options[@]})                                                                                                                                                                                                                             
                                                                                                                                                                                                                
    if [[ -n "$selection" ]]; then                                                                                                                                                                                                                       
       PortInfoInstall "$selection"                                                                                                                                                                                                                      
    else                                                                                                                                                                                                                                                 
       exit 0                                                                                                                                                                                                                                          
    fi                                                                                                                                                                                                                                                   
  done              
}

if [[ "${IS_TEST_MODE:-}" == "true" ]]; then
  echo "done - test mode active"
  exit 0
fi

$ESUDO wget -t 3 -T 60 --no-check-certificate "$WEBSITE"ports.md -O /dev/shm/portmaster/ports.md
echo_err "downloaded ports.md"

run_at_exit Cleanup

if dialog_yes_no "$TITLE" "Would you like to check for an update to the PortMaster tool?"; then
   UpdateCheck
fi

MainMenu

