#! /bin/bash
set -e
DIR="$(realpath $( dirname "${BASH_SOURCE[0]}" ))"
ARGS_COPY=("$@")

function parse_args() {
  LIBRARIES=""
  LEGACY_PORTMASTER_DEFAULT=""
  LEGACY_PORTMASTER_OVERRIDE=""
  BUILDS=""
  DO_BUILD="true"

  # Parse args
  ARGS=()
  while [[ $# -gt 0 ]]; do
    key="$1"
  
    case $key in
      -l|--libraries)
        LIBRARIES="true"
        shift # past argument
        ;;
      --legacy-default)
        LEGACY_PORTMASTER_DEFAULT="true"
        shift # past argument
        ;;
      --legacy-url-override)
        LEGACY_PORTMASTER_OVERRIDE="true"
        shift # past argument
        ;;
      --builds)
        BUILDS="true"
        shift # past argument
        ;;
      --no-build)
        DO_BUILD="false"
        shift # past argument
        ;;
      -h|--help)
        echo "$0  [arguments]"
        echo "  --libraries - lists all PKG_LIBRARY=true"
        echo "  --legacy-default - lists all LEGACY_PORTMASTER=true which do not have an LEGACY_URL_OVERRIDE"
        echo "  --legacy-override-url - lists all LEGACY_PORTMASTER=true which have a LEGACY_URL_OVERRIDE"
        echo "  --builds - lists all LEGACY_PORTMASTER=true which have a LEGACY_URL_OVERRIDE"


        exit 1
        ;;
      *)    # unknown option
        ARGS+=("$1") # save it in an array for later
        shift # past argument
        ;;
    esac
  done
}
parse_args "$@"

for directory in ${DIR}/*/; do
  directory=${directory%/}
  #echo "directory: $directory"
  if [ -f "${directory}/package.info" ]; then
    PKG_LIBRARY=""
    LEGACY_URL_OVERRIDE=""
    LEGACY_PORTMASTER=""
    source "${directory}/package.info"
    TO_BUILD="$(basename ${directory})"
    DEFAULT=true
    if [[ "${LEGACY_PORTMASTER_OVERRIDE}" == "true" ]]; then
       DEFAULT=false
       if [[ -n "${LEGACY_URL_OVERRIDE}" &&  "${LEGACY_PORTMASTER}" == "true" ]]; then
          echo "${TO_BUILD}"
          if [[ "${DO_BUILD}" == "true" ]]; then
            ${DIR}/build "${TO_BUILD}" "${ARGS_COPY[@]}"
          fi
       fi
    fi
    if [[ "${LEGACY_PORTMASTER_DEFAULT}" == "true" ]]; then
       DEFAULT=false

       if [[ -z "${LEGACY_URL_OVERRIDE}" &&  "${LEGACY_PORTMASTER}" == "true" ]]; then
          echo "${TO_BUILD}"
          if [[ "${DO_BUILD}" == "true" ]]; then
            ${DIR}/build "${TO_BUILD}" "${ARGS_COPY[@]}"
          fi
       fi
    fi
    if [[ "${BUILDS}" == "true" ]]; then
       DEFAULT=false

       if [[ -n "${PKG_URL}" &&  "${LEGACY_PORTMASTER}" != "true" &&  "${PKG_LIBRARY}" != "true" ]]; then
          echo "${TO_BUILD}"
          if [[ "${DO_BUILD}" == "true" ]]; then
            ${DIR}/build "${TO_BUILD}" "${ARGS_COPY[@]}"
          fi
       fi
    fi
    if [[ "${LIBRARIES}" == "true" ]]; then
      DEFAULT=false
      if [[ "${PKG_LIBRARY}" == "true" ]]; then
        echo "${TO_BUILD}"
        if [[ "${DO_BUILD}" == "true" ]]; then
          ${DIR}/build "${TO_BUILD}" "${ARGS_COPY[@]}"
        fi
      fi
    fi
    
    
    if [[ "${DEFAULT}" == "true" && "${PKG_LIBRARY}" != "true" ]]; then
      echo "${TO_BUILD}"
      if [[ "${DO_BUILD}" == "true" ]]; then
        ${DIR}/build "${TO_BUILD}" "${ARGS_COPY[@]}"
      fi
    fi
  fi
done
