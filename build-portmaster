#!/bin/bash
set -e

BRANCH=main

DOCKERFILE_BUILD=Dockerfile.build

IMAGE_BASE=ghcr.io/pkegg/portmaster
IMAGE=${IMAGE_BASE}:${BRANCH}
IMAGE_CACHE=${IMAGE_BASE}/cache:${BRANCH}

IMAGE_BUILD_BASE=${IMAGE_BASE}/build
IMAGE_BUILD=${IMAGE_BUILD_BASE}:${BRANCH}
IMAGE_BUILD_CACHE=${IMAGE_BUILD_BASE}/cache:${BRANCH}

if [[ "${DOCKER_PUSH}" == "true" ]]; then
  IMAGE_CACHE_TO="--pull --cache-to=type=registry,ref=${IMAGE_CACHE},mode=max --push"
  IMAGE_BUILD_CACHE_TO="--pull --cache-to=type=registry,ref=${IMAGE_BUILD_CACHE},mode=max --push"

else
  IMAGE_CACHE_TO="--load"
  IMAGE_BUILD_CACHE_TO="$IMAGE_CACHE_TO"
fi

#PLATFORM=linux/arm64/v8,linux/arm/v7,linux/amd64
PLATFORM=linux/arm64/v8
echo "IMAGE: ${IMAGE} IMAGE_CACHE: ${IMAGE_CACHE}"
echo "IMAGE_CACHE_TO: ${IMAGE_CACHE_TO}"
docker buildx build --builder portmaster-builder --tag ${IMAGE} \
  --cache-from=type=registry,ref=${IMAGE_CACHE} \
  ${IMAGE_CACHE_TO} \
  --platform ${PLATFORM} .

echo "IMAGE_BUILD: ${IMAGE_BUILD} IMAGE_BUILD_CACHE: ${IMAGE_BUILD_CACHE}"
docker buildx build --tag ${IMAGE_BUILD} \
  --cache-from=type=registry,ref=${IMAGE_BUILD_CACHE} \
  ${IMAGE_BUILD_CACHE_TO} \
  --platform ${PLATFORM} -f ${DOCKERFILE_BUILD} .

./build portmaster
